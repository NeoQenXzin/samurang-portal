name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_sqlite, intl
          coverage: xdebug

      - name: Copy .env.test
        run: php -r "file_exists('.env.test') || copy('.env.test.dist', '.env.test');"
        
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Installation des assets Symfony
      - name: Install Symfony assets
        run: |
          php bin/console assets:install public --env=test
          php bin/console cache:clear --env=test

      - name: Generate JWT Keys
        run: |
          mkdir -p config/jwt
          openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -pass pass:${{ secrets.JWT_PASSPHRASE }}
          openssl pkey -in config/jwt/private.pem -out config/jwt/public.pem -pubout -passin pass:${{ secrets.JWT_PASSPHRASE }}

      - name: Setup Database
        env:
          DATABASE_URL: "sqlite:///%kernel.project_dir%/var/test.db"
          APP_ENV: test
          JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
        run: |
          php bin/console doctrine:schema:create --env=test
          php bin/console doctrine:fixtures:load --env=test --no-interaction

      - name: Execute Tests
        env:
          DATABASE_URL: "sqlite:///%kernel.project_dir%/var/test.db"
          APP_ENV: test
          JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
          KERNEL_CLASS: 'App\Kernel'
          SYMFONY_DEPRECATIONS_HELPER: disabled
        run: |
          php bin/console cache:clear --env=test
          php bin/phpunit --debug
        
        - name: Execute Tests with Coverage
          env:
            DATABASE_URL: "sqlite:///%kernel.project_dir%/var/test.db"
            APP_ENV: test
            JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
            KERNEL_CLASS: 'App\Kernel'
            SYMFONY_DEPRECATIONS_HELPER: disabled
          run: |
            php bin/console cache:clear --env=test
            XDEBUG_MODE=coverage php bin/phpunit --coverage-clover coverage.xml

        - name: Upload Backend Coverage to Codecov
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: ./coverage.xml
            flags: backend
            fail_ci_if_error: true


  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install Dependencies
        working-directory: ./frontend
        run: |
          npm install
          npm install --save-dev @babel/plugin-proposal-private-property-in-object

      - name: Run Tests
        working-directory: ./frontend
        run: npm run vitest

      - name: Run tests
        run: npx vitest run --coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: NeoQenXzin/samurang-portal
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

